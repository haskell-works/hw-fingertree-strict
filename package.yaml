name: hw-fingertree-strict
version: '0.1.1.1'
synopsis: Generic strict finger-tree structure
description: ! 'A general sequence representation with arbitrary

  annotations, for use as a base for implementations of

  various collection types, with examples, as described

  in section 4 of


  * Ralf Hinze and Ross Paterson,

  \"Finger trees: a simple general-purpose data structure\",

  /Journal of Functional Programming/ 16:2 (2006) pp 197-217.

  <http://staff.city.ac.uk/~ross/papers/FingerTree.html>


  For a tuned sequence type, see @Data.Sequence@ in the

  @containers@ package, which is a specialization of

  this structure.'
category: Data Structures
author: John Ky
maintainer: newhoggy@gmail.com
copyright:
- 2017 John Ky; 2006 Ross Paterson
- Ralf Hinze
license: BSD3
github: haskell-works/hw-fingertree-strict
extra-source-files:
- README.md

library:
  source-dirs: src
  exposed-modules:
  - HaskellWorks.Data.FingerTree.Strict
  - HaskellWorks.Data.IntervalMap.Strict
  - HaskellWorks.Data.Item.Strict
  - HaskellWorks.Data.PriorityQueue.Strict
  - HaskellWorks.Data.SegmentMap.Strict
  - HaskellWorks.Data.SegmentSet.Strict
  - HaskellWorks.Data.Segment.Strict
  dependencies:
  - base >=4.7 && <5
  - deepseq
  other-extensions:
  - DeriveAnyClass
  when:
  - condition: ! '!(impl(ghc >=8.0))'
    dependencies:
    - semigroups ==0.18.*

tests:
  hw-fingertree-strict-test:
    main: Spec.hs
    source-dirs: test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    cpp-options: -DTESTING
    dependencies:
    - base >=4.2 && <6
    - hedgehog
    - hspec
    - HUnit
    - hw-fingertree-strict
    - hw-hspec-hedgehog
    - QuickCheck
    - test-framework
    - test-framework-hunit
    - test-framework-quickcheck2
